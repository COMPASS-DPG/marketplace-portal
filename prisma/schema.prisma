// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Here goes models

enum CourseProgressStatus {
  IN_PROGRESS
  COMPLETED
}

enum NotificationStatus {
  VIEWED
  NOT_VIEWED
}

model ConsumerMetadata {
  consumerId              String                    @id
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  savedCourses            Int[]                     @default([])
  Notifications           Notification[]        
  ConsumerCourseMetadata  ConsumerCourseMetadata[]         
}

model ConsumerCourseMetadata {
  id                  Int                   @id @default(autoincrement())
  consumerId          String    
  courseId            Int       
  status              CourseProgressStatus  @default(IN_PROGRESS)
  walletTransactionId Int
  becknTransactionId  Int
  rating              Int?
  feedback            String?
  CourseInfo          CourseInfo            @relation(fields: [courseId], references: [courseId])
  ConsumerMetadata    ConsumerMetadata      @relation(fields: [consumerId], references: [consumerId])

  @@unique([consumerId, courseId])
}

model CourseInfo {
  courseId                Int                       @id
  bppId                   String
  title                   String
  description             String
  credits                 Int
  imageLink               String
  language                String[]
  courseLink              String
  providerName            String
  ConsumerCourseMetadata  ConsumerCourseMetadata[]
}

model Admin {
  id        String     @id @default(uuid()) 
  name      String  
  email     String     @unique
  password  String
}

model Notification {
  id                  Int                 @id @default(autoincrement())
  consumerId          String    
  text                String
  link                String
  status              NotificationStatus  @default(NOT_VIEWED)
  ConsumerMetadata    ConsumerMetadata    @relation(fields: [consumerId], references: [consumerId])
}
